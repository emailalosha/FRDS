#!/bin/bash
AM_URL=$1
AM_PWD=$2
COOKIE_NAME=$3
#Generate random uids for nodes
USERNAME_COLLECTOR=$(uuidgen)
PASSWORD_COLLECTOR=$(uuidgen)
DATA_STORE_DECISION=$(uuidgen)
SEARCH_USER_NODE=$(uuidgen)
PAGE_NODE_1=$(uuidgen)
PAGE_NODE_2=$(uuidgen)
INPUT_COLLECTOR_DEVICE_INFO=$(uuidgen)
INPUT_COLLECTOR_BENEFICIARY=$(uuidgen)
INPUT_COLLECTOR_AMOUNT=$(uuidgen)
INPUT_COLLECTOR_SIGNED_AMOUNT=$(uuidgen)
INPUT_COLLECTOR_SIGNED_BENEFICIARY=$(uuidgen)
ERROR_MSG_NODE_1=$(uuidgen)
ERROR_MSG_NODE_2=$(uuidgen)
ERROR_MSG_NODE_3=$(uuidgen)
ERROR_MSG_NODE_4=$(uuidgen)
ERROR_MSG_NODE_5=$(uuidgen)
SESSION_NODE=$(uuidgen)
STEP_UP_NODE=$(uuidgen)
#FIXED VALUES FOR SUCCESS AND FAILED NODES
SUCCESS="70e691a5-1e33-4ac3-a356-e7b6d60d92e0"
FAILURE="e301438c-0bd0-429c-ab0c-66126501069a"
#Get admin token
tokenId=$(curl -s -k -X POST  ${AM_URL}/json/realms/root/authenticate  -H 'Accept-API-Version: resource=2.1' -H 'Content-Type: application/json' -H "X-OpenAM-Password: $AM_PWD" -H 'X-OpenAM-Username: amadmin' | jq '.tokenId' | tr -d \")
#Input collectors
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"useTransient":false,"variable":"username","prompt":"Email/PhoneNumber/username/customerId","isPassword":false,"_id":"'${USERNAME_COLLECTOR}'","_type":{"_id":"InputCollectorNode","name":"Input Collector Node"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/InputCollectorNode/${USERNAME_COLLECTOR}
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"useTransient":false,"variable":"device_info","prompt":"Device info (JSON)","isPassword":false,"_id":"'${INPUT_COLLECTOR_DEVICE_INFO}'","_type":{"_id":"InputCollectorNode","name":"Input Collector Node"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/InputCollectorNode/${INPUT_COLLECTOR_DEVICE_INFO}
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"useTransient":false,"variable":"amount","prompt":"Amount","isPassword":false,"_id":"'${INPUT_COLLECTOR_AMOUNT}'","_type":{"_id":"InputCollectorNode","name":"Input Collector Node"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/InputCollectorNode/${INPUT_COLLECTOR_AMOUNT}
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"useTransient":false,"variable":"beneficiary","prompt":"Beneficiary","isPassword":false,"_id":"'${INPUT_COLLECTOR_BENEFICIARY}'","_type":{"_id":"InputCollectorNode","name":"Input Collector Node"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/InputCollectorNode/${INPUT_COLLECTOR_BENEFICIARY}
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"useTransient":false,"variable":"signed_amount","prompt":"Signed amount","isPassword":false,"_id":"'${INPUT_COLLECTOR_SIGNED_AMOUNT}'","_type":{"_id":"InputCollectorNode","name":"Input Collector Node"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/InputCollectorNode/${INPUT_COLLECTOR_SIGNED_AMOUNT}
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"useTransient":false,"variable":"signed_beneficiary","prompt":"Signed beneficiary","isPassword":false,"_id":"'${INPUT_COLLECTOR_SIGNED_BENEFICIARY}'","_type":{"_id":"InputCollectorNode","name":"Input Collector Node"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/InputCollectorNode/${INPUT_COLLECTOR_SIGNED_BENEFICIARY}
#Failure message Nodes
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"_id":"'$ERROR_MSG_NODE_1'","UseSharedState":false,"FailureMessage":"FR-006","_type":{"_id":"FailureMessageAuthNode","name":"Failure Message Node"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/FailureMessageAuthNode/${ERROR_MSG_NODE_1}
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"_id":"'$ERROR_MSG_NODE_2'","UseSharedState":false,"FailureMessage":"FR-011","_type":{"_id":"FailureMessageAuthNode","name":"Failure Message Node"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/FailureMessageAuthNode/${ERROR_MSG_NODE_2}
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"_id":"'$ERROR_MSG_NODE_3'","UseSharedState":false,"FailureMessage":"FR-018","_type":{"_id":"FailureMessageAuthNode","name":"Failure Message Node"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/FailureMessageAuthNode/${ERROR_MSG_NODE_3}
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"_id":"'$ERROR_MSG_NODE_4'","UseSharedState":false,"FailureMessage":"FR-017","_type":{"_id":"FailureMessageAuthNode","name":"Failure Message Node"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/FailureMessageAuthNode/${ERROR_MSG_NODE_4}
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"_id":"'$ERROR_MSG_NODE_5'","UseSharedState":false,"FailureMessage":"FR-019","_type":{"_id":"FailureMessageAuthNode","name":"Failure Message Node"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/FailureMessageAuthNode/${ERROR_MSG_NODE_5}
#Search user
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"sharedStateAttribute":"username","datastoreAttributes":["mail","telephoneNumber","uid","customerId"],"_id":"'$SEARCH_USER_NODE'","_type":{"_id":"SearchForUserNode","name":"Search For User"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/SearchForUserNode/${SEARCH_USER_NODE}
#Password collector
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"_id":"'${PASSWORD_COLLECTOR}'","_type":{"_id":"PasswordCollectorNode","name":"Password Collector"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/PasswordCollectorNode/${PASSWORD_COLLECTOR}
#DataStore
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"_id":"'${DATA_STORE_DECISION}'","_type":{"_id":"DataStoreDecisionNode","name":"Data Store Decision"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/DataStoreDecisionNode/${DATA_STORE_DECISION}
#Page nodes
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"_id":"'${PAGE_NODE_1}'","nodes":[{"_id":"'$INPUT_COLLECTOR_DEVICE_INFO'","nodeType":"InputCollectorNode","displayName":"Input Collector Node"},{"_id":"'$INPUT_COLLECTOR_AMOUNT'","nodeType":"InputCollectorNode","displayName":"Input Collector Node"},{"_id":"'$INPUT_COLLECTOR_BENEFICIARY'","nodeType":"InputCollectorNode","displayName":"Input Collector Node"}],"_type":{"_id":"PageNode","name":"Page Node"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/PageNode/${PAGE_NODE_1}
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"_id":"'${PAGE_NODE_2}'","nodes":[{"_id":"'$INPUT_COLLECTOR_SIGNED_AMOUNT'","nodeType":"InputCollectorNode","displayName":"Input Collector Node"},{"_id":"'$INPUT_COLLECTOR_SIGNED_BENEFICIARY'","nodeType":"InputCollectorNode","displayName":"Input Collector Node"}],"_type":{"_id":"PageNode","name":"Page Node"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/PageNode/${PAGE_NODE_2}
#Step up auth
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"_id":"'${STEP_UP_NODE}'","deviceAttr":"device","uniqueIdAttr":"DeviceId","sharedStateBeneficiaryAttr":"beneficiary","publicKeyAttr":"public_key","sharedStateAmountAttr":"amount","signingAlgorithm":"SHA256withRSA","sharedStateSignedAmountChallengeAttr":"signed_amount","sharedStateDeviceAttr":"device_info","sharedStateSignedBeneficiaryChallengeAttr":"signed_beneficiary","algorithm":"RSA","_type":{"_id":"StepUpAuthenticationNode","name":"Step up Device authentication"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/StepUpAuthenticationNode/${STEP_UP_NODE}
#Session node
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"_id":"'$SESSION_NODE'","keys":{"amount":"","beneficiary":""},"_type":{"_id":"PromoteToSessionNode","name":"Promote To Session"}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/nodes/PromoteToSessionNode/${SESSION_NODE}
#Post Auth Tree
curl -s -k -X PUT -H "${COOKIE_NAME}: ${tokenId}" -H "Content-Type: application/json" -H "Accept-API-Version: resource=1.0" -H "If-None-Match: *" -d '{"entryNodeId":"'$USERNAME_COLLECTOR'","nodes":{"'$SEARCH_USER_NODE'":{"displayName":"Search For User","nodeType":"SearchForUserNode","connections":{"notFound":"'$ERROR_MSG_NODE_1'","ambiguous":"'$ERROR_MSG_NODE_1'","found":"'$PASSWORD_COLLECTOR'"}},"'$STEP_UP_NODE'":{"displayName":"Step up Device authentication","nodeType":"StepUpAuthenticationNode","connections":{"success":"'$SESSION_NODE'","no_device_match":"'$ERROR_MSG_NODE_4'","error":"'$ERROR_MSG_NODE_3'","failure":"'$ERROR_MSG_NODE_5'"}},"'$PAGE_NODE_1'":{"displayName":"Page Node","nodeType":"PageNode","connections":{"outcome":"'$PAGE_NODE_2'"}},"'$PAGE_NODE_2'":{"displayName":"Page Node","nodeType":"PageNode","connections":{"outcome":"'$STEP_UP_NODE'"}},"'$SESSION_NODE'":{"displayName":"Promote To Session","nodeType":"PromoteToSessionNode","connections":{"outcome":"'$SUCCESS'"}},"'$ERROR_MSG_NODE_5'":{"displayName":"Failure Message Node","nodeType":"FailureMessageAuthNode","connections":{"outcome":"'$FAILURE'"}},"'$ERROR_MSG_NODE_3'":{"displayName":"Failure Message Node","nodeType":"FailureMessageAuthNode","connections":{"outcome":"'$FAILURE'"}},"'$ERROR_MSG_NODE_4'":{"displayName":"Failure Message Node","nodeType":"FailureMessageAuthNode","connections":{"outcome":"'$FAILURE'"}},"'$USERNAME_COLLECTOR'":{"displayName":"Input Collector Node","nodeType":"InputCollectorNode","connections":{"outcome":"'$SEARCH_USER_NODE'"}},"'$ERROR_MSG_NODE_1'":{"displayName":"Failure Message Node","nodeType":"FailureMessageAuthNode","connections":{"outcome":"'$FAILURE'"}},"'$PASSWORD_COLLECTOR'":{"displayName":"Password Collector","nodeType":"PasswordCollectorNode","connections":{"outcome":"'$DATA_STORE_DECISION'"}},"'$DATA_STORE_DECISION'":{"displayName":"Data Store Decision","nodeType":"DataStoreDecisionNode","connections":{"true":"'$PAGE_NODE_1'","false":"'$ERROR_MSG_NODE_2'"}},"'$ERROR_MSG_NODE_2'":{"displayName":"Failure Message Node","nodeType":"FailureMessageAuthNode","connections":{"outcome":"'$FAILURE'"}}}}' ${AM_URL}/json/realms/root/realms/customers/realm-config/authentication/authenticationtrees/trees/step_up_tree
